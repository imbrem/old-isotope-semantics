@article{premonoidal-string-diagrams-mario-2022,
  author        = {{Rom{\'a}n}, Mario},
  title         = {{Promonads and String Diagrams for Effectful Categories}},
  journal       = {arXiv e-prints},
  keywords      = {Mathematics - Category Theory, Computer Science - Logic in Computer Science, 18M30},
  year          = 2022,
  month         = may,
  eid           = {arXiv:2205.07664},
  doi           = {10.48550/arXiv.2205.07664},
  archiveprefix = {arXiv},
  eprint        = {2205.07664},
  primaryclass  = {math.CT},
  adsurl        = {https://ui.adsabs.harvard.edu/abs/2022arXiv220507664R},
  adsnote       = {Provided by the SAO/NASA Astrophysics Data System}
}

@article{fuhrmann-1999,
  title    = {Direct Models of the Computational Lambda-calculus},
  journal  = {Electronic Notes in Theoretical Computer Science},
  volume   = {20},
  pages    = {245-292},
  year     = {1999},
  note     = {MFPS XV, Mathematical Foundations of Progamming Semantics, Fifteenth Conference},
  issn     = {1571-0661},
  doi      = {https://doi.org/10.1016/S1571-0661(04)80078-1},
  url      = {https://www.sciencedirect.com/science/article/pii/S1571066104800781},
  author   = {Carsten Führmann},
  abstract = {We introduce direct categorical models for the computational lambda-calculus. Direct models correspond to the source level of a compiler whose target level corresponds to Moggi's monadic models. That compiler is a generalised call-by-value CPS-transform. We get our direct models by identifying the algebraic structure on the Kleisli category that arises from a monadic model. We show that direct models draw our attention to previously inconspicuous, but important, classes of programs (e.g. central, copyable, and discardable programs), and we'll analyse these classes exhaustively—at a general level, and for several specific computational effects. Moreover, we show that from each direct model K we can recover the monadic model from which K arises as the Kleisli category.}
}